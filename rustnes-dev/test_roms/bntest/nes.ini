MEMORY {
  ZP:     start = $10, size = $f0, type = rw;
  # use first $10 zeropage locations as locals
  HEADER: start = 0, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;
  RAM:    start = $0300, size = $0500, type = rw;
  ROM0:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM1:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM2:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM3:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM4:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM5:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM6:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM7:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM8:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM9:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM10:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM11:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM12:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM13:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM14:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  ROM15:    start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
}

SEGMENTS {
  INESHDR:  load = HEADER, type = ro, align = $10;
  ZEROPAGE: load = ZP, type = zp;
  BSS:      load = RAM, type = bss, define = yes, align = $100, optional = yes;

  RAMCODE:  load = ROM0, run = RAM, type = ro, define = yes, align = $100, optional = yes;
  CODE:     load = ROM0, type = ro, align = $100;
  RODATA:   load = ROM0, type = ro, align = $100;
  VECTORS0: load = ROM0, type = ro, start = $FFF0;
  VECTORS1: load = ROM1, type = ro, start = $FFF0;
  VECTORS2: load = ROM2, type = ro, start = $FFF0;
  VECTORS3: load = ROM3, type = ro, start = $FFF0;
  VECTORS4: load = ROM4, type = ro, start = $FFF0;
  VECTORS5: load = ROM5, type = ro, start = $FFF0;
  VECTORS6: load = ROM6, type = ro, start = $FFF0;
  VECTORS7: load = ROM7, type = ro, start = $FFF0;
  VECTORS8: load = ROM8, type = ro, start = $FFF0;
  VECTORS9: load = ROM9, type = ro, start = $FFF0;
  VECTORS10:load = ROM10,type = ro, start = $FFF0;
  VECTORS11:load = ROM11,type = ro, start = $FFF0;
  VECTORS12:load = ROM12,type = ro, start = $FFF0;
  VECTORS13:load = ROM13,type = ro, start = $FFF0;
  VECTORS14:load = ROM14,type = ro, start = $FFF0;
  VECTORS15:load = ROM15,type = ro, start = $FFF0;
}

FILES {
  %O: format = bin;
}

