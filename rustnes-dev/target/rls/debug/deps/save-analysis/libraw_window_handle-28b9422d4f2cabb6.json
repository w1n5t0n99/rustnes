{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3","program":"C:\\Users\\relam\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","raw_window_handle","--edition=2018","C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=28b9422d4f2cabb6","-C","extra-filename=-28b9422d4f2cabb6","--out-dir","c:\\projects\\rustnes\\rustnes-dev\\target\\rls\\debug\\deps","-L","dependency=c:\\projects\\rustnes\\rustnes-dev\\target\\rls\\debug\\deps","--extern","libc=c:\\projects\\rustnes\\rustnes-dev\\target\\rls\\debug\\deps\\liblibc-449c9e11d9cbed5e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\relam\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\projects\\rustnes\\rustnes-dev\\target\\rls\\debug\\deps\\libraw_window_handle-28b9422d4f2cabb6.rmeta"},"prelude":{"crate_id":{"name":"raw_window_handle","disambiguator":[11566137539677245619,15356326040427019291]},"crate_root":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src","external_crates":[{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[18042673982934947978,12625110394568559395]}},{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7915187584390589076,11757046858262610570]}},{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1324407439594145559,13485846882990707907]}},{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","num":4,"id":{"name":"libc","disambiguator":[5737234772343946776,15736624636195936543]}}],"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":0,"byte_end":6660,"line_start":1,"line_end":194,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":0,"byte_end":6660,"line_start":1,"line_end":194,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":33},{"krate":0,"index":53},{"krate":0,"index":51},{"krate":0,"index":50},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":40},{"krate":0,"index":13}],"decl_id":null,"docs":" Interoperability library for Rust Windowing applications.","sig":null,"attributes":[{"value":"! Interoperability library for Rust Windowing applications.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":0,"byte_end":61,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":62,"byte_end":65,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This library provides standard types for accessing a window's platform-specific raw window","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":66,"byte_end":160,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"! handle. This does not provide any utilities for creating and managing windows; instead, it","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":161,"byte_end":255,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"! provides a common interface that window creation libraries (e.g. Winit, SDL) can use to easily","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":256,"byte_end":354,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"! talk with graphics libraries (e.g. gfx-hal).","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":355,"byte_end":403,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":404,"byte_end":407,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ## Platform handle initialization","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":408,"byte_end":445,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":446,"byte_end":449,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Each platform handle struct is purposefully non-exhaustive, so that additional fields may be","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":450,"byte_end":546,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"! added without breaking backwards compatibility. Each struct provides an `empty` method that may","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":547,"byte_end":646,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"! be used along with the struct update syntax to construct it. See each specific struct for","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":647,"byte_end":740,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"! examples.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":741,"byte_end":754,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":755,"byte_end":758,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"no_std","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":816,"byte_end":826,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::windows","value":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":14},{"krate":0,"index":31},{"krate":0,"index":29},{"krate":0,"index":28},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":18},{"krate":0,"index":7}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"windows\")","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2017,"byte_end":2043,"line_start":52,"line_end":52,"column_start":43,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6980,"byte_end":6993,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"WindowsHandle","qualname":"::windows::WindowsHandle","value":"WindowsHandle { hwnd, hinstance, _non_exhaustive_do_not_use }","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Raw window handle for Windows.","sig":null,"attributes":[{"value":"/ Raw window handle for Windows.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6696,"byte_end":6730,"line_start":4,"line_end":4,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6731,"byte_end":6734,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ## Construction","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6735,"byte_end":6754,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6755,"byte_end":6762,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # use raw_window_handle::windows::WindowsHandle;","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6763,"byte_end":6815,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/ let handle = WindowsHandle {","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6816,"byte_end":6848,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/     /* fields */","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6849,"byte_end":6869,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"/     ..WindowsHandle::empty()","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6870,"byte_end":6902,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6903,"byte_end":6909,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":6910,"byte_end":6917,"line_start":13,"line_end":13,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7033,"byte_end":7037,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"hwnd","qualname":"::windows::WindowsHandle::hwnd","value":"*mut core::ffi::c_void","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" A Win32 HWND handle.\n","sig":null,"attributes":[{"value":"/ A Win32 HWND handle.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7000,"byte_end":7024,"line_start":16,"line_end":16,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7116,"byte_end":7125,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"hinstance","qualname":"::windows::WindowsHandle::hinstance","value":"*mut core::ffi::c_void","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" The HINSTANCE associated with this type's HWND.\n","sig":null,"attributes":[{"value":"/ The HINSTANCE associated with this type's HWND.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7056,"byte_end":7107,"line_start":18,"line_end":18,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7324,"byte_end":7350,"line_start":22,"line_end":22,"column_start":9,"column_end":35},"name":"_non_exhaustive_do_not_use","qualname":"::windows::WindowsHandle::_non_exhaustive_do_not_use","value":"seal::Seal","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated =\n  \"This field is used to ensure that this struct is non-exhaustive, so that it may be extended in the future. Do not refer to this field.\"","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7163,"byte_end":7315,"line_start":21,"line_end":21,"column_start":5,"column_end":157}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7406,"byte_end":7411,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"empty","qualname":"<WindowsHandle>::empty","value":"fn () -> WindowsHandle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3629,"byte_end":3647,"line_start":94,"line_end":94,"column_start":18,"column_end":36},"name":"HasRawWindowHandle","qualname":"::HasRawWindowHandle","value":"HasRawWindowHandle","parent":null,"children":[{"krate":0,"index":12}],"decl_id":null,"docs":" Window that wraps around a raw window handle.","sig":null,"attributes":[{"value":"/ Window that wraps around a raw window handle.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2617,"byte_end":2666,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2667,"byte_end":2670,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Safety guarantees","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2671,"byte_end":2694,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2695,"byte_end":2698,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Users can safely assume that non-`null`/`0` fields are valid handles, and it is up to the","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2699,"byte_end":2792,"line_start":81,"line_end":81,"column_start":1,"column_end":94}},{"value":"/ implementer of this trait to ensure that condition is upheld. However, It is entirely valid","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2793,"byte_end":2888,"line_start":82,"line_end":82,"column_start":1,"column_end":96}},{"value":"/ behavior for fields within each platform-specific `RawWindowHandle` variant to be `null` or","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2889,"byte_end":2984,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ `0`, and appropriate checking should be done before the handle is used.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2985,"byte_end":3060,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3061,"byte_end":3064,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Despite that qualification, implementers should still make a best-effort attempt to fill in all","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3065,"byte_end":3164,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ available fields. If an implementation doesn't, and a downstream user needs the field, it should","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3165,"byte_end":3265,"line_start":87,"line_end":87,"column_start":1,"column_end":101}},{"value":"/ try to derive the field from other fields the implementer *does* provide via whatever methods the","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3266,"byte_end":3367,"line_start":88,"line_end":88,"column_start":1,"column_end":102}},{"value":"/ platform provides.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3368,"byte_end":3390,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3391,"byte_end":3394,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The exact handles returned by `raw_window_handle` must remain consistent between multiple calls","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3395,"byte_end":3494,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/ to `raw_window_handle`, and must be valid for at least the lifetime of the `HasRawWindowHandle`","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3495,"byte_end":3594,"line_start":92,"line_end":92,"column_start":1,"column_end":100}},{"value":"/ implementer.","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3595,"byte_end":3611,"line_start":93,"line_end":93,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3657,"byte_end":3674,"line_start":95,"line_end":95,"column_start":8,"column_end":25},"name":"raw_window_handle","qualname":"::HasRawWindowHandle::raw_window_handle","value":"fn (&self) -> RawWindowHandle","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":5952,"byte_end":5959,"line_start":176,"line_end":176,"column_start":5,"column_end":12},"name":"Windows","qualname":"::RawWindowHandle::Windows","value":"RawWindowHandle::Windows(windows::WindowsHandle)","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"windows\")","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":5919,"byte_end":5945,"line_start":175,"line_end":175,"column_start":47,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":6532,"byte_end":6555,"line_start":188,"line_end":188,"column_start":5,"column_end":28},"name":"__NonExhaustiveDoNotUse","qualname":"::RawWindowHandle::__NonExhaustiveDoNotUse","value":"RawWindowHandle::__NonExhaustiveDoNotUse(seal::Seal)","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated =\n  \"This field is used to ensure that this struct is non-exhaustive, so that it may be extended in the future. Do not refer to this field.\"","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":6375,"byte_end":6527,"line_start":187,"line_end":187,"column_start":5,"column_end":157}}]},{"kind":"Enum","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":3765,"byte_end":3780,"line_start":99,"line_end":99,"column_start":10,"column_end":25},"name":"RawWindowHandle","qualname":"::RawWindowHandle","value":"RawWindowHandle::{Windows, __NonExhaustiveDoNotUse}","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":37}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":6653,"byte_end":6657,"line_start":193,"line_end":193,"column_start":16,"column_end":20},"name":"Seal","qualname":"::seal::Seal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7379,"byte_end":7392,"line_start":25,"line_end":25,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\lib.rs","byte_start":2054,"byte_end":2061,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\relam\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\raw-window-handle-0.3.3\\src\\windows.rs","byte_start":7379,"byte_end":7392,"line_start":25,"line_end":25,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":4294967295,"index":4294967295}}]}